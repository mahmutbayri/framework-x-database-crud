AWSTemplateFormatVersion: "2010-09-09"
Description: Framework X CRUD
Parameters:
  VPC:
    Type: AWS::EC2::VPC::Id
  SubnetA:
    Type: AWS::EC2::Subnet::Id
  Image:
    Type: String
    Default: mahmutbayri/framework-x-database-crud:latest
  ServiceName:
    Type: String
    Default: FrameworkXCRUD
  ContainerPort:
    Type: Number
    Default: 3000
Resources:
  Cluster:
    Type: AWS::ECS::Cluster
    Properties:
      ClusterName: !Sub "${ServiceName}Cluster"
  TaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: !Sub "${ServiceName}TaskDefinition"
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      Cpu: "256"
      Memory: 0.5GB
      ExecutionRoleArn: !GetAtt ExecutionRole.Arn
      ContainerDefinitions:
        - Image: !Ref Image
          Name: !Ref ServiceName
          PortMappings:
            - ContainerPort: !Ref ContainerPort
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-region: !Ref AWS::Region
              awslogs-group: !Ref LogGroup
              awslogs-stream-prefix: ecs
          Environment:
            - Name: X_LISTEN
              Value: !Sub "0.0.0.0:${ContainerPort}"
  ExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub "${ServiceName}ExecutionRole"
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
            Action: "sts:AssumeRole"
      ManagedPolicyArns:
           - "arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy"
  Service:
    Type: AWS::ECS::Service
    Properties:
      ServiceName: !Sub "${ServiceName}Service"
      Cluster: !Ref Cluster
      LaunchType: FARGATE
      TaskDefinition: !Ref TaskDefinition
      DesiredCount: 1
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: ENABLED
          Subnets:
            - !Ref SubnetA
          SecurityGroups:
            - !Ref ContainerSecurityGroup
  ContainerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: !Sub "${ServiceName}SecurityGroup"
      GroupDescription: !Sub "${ServiceName}Description"
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: !Ref ContainerPort
          ToPort: !Ref ContainerPort
          CidrIp: "0.0.0.0/0"
  LogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "/ecs/${ServiceName}TaskDefinition"
      RetentionInDays: 3
